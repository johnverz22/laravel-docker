name: Build and deploy Laravel app to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: mylaravelapp    # Set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'     # Set this to the path to your web app project, defaults to the repository root
  PHP_VERSION: '8.2'                 # Set this to the PHP version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, pdo, bcmath, intl

      - name: Rename .env.example to .env
        run: |
          cp .env.example .env
          echo "Renamed .env.example to .env"

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          echo "Composer installed successfully."

      - name: Install Composer dependencies (Production)
        run: |
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          echo "Laravel dependencies installed and optimized for production."

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install npm dependencies and build for production
        run: |
          npm install
          npm run build --production
          echo "npm dependencies installed and built for production."

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: laravel-app
          path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: laravel-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

      - name: Ensure .env file exists and set database connections
        run: |
          ENV_PATH="/var/www/html/wwwroot/.env"
          if [ ! -f "$ENV_PATH" ]; then
            echo "Creating .env file on the server"
            echo -e "APP_NAME=Laravel\nAPP_ENV=production\nAPP_DEBUG=false\nAPP_URL=${{ secrets.APP_URL }}" > $ENV_PATH
            echo -e "DB_CONNECTION=mysql\nDB_HOST=${{ secrets.DB_HOST }}\nDB_PORT=3306\nDB_DATABASE=${{ secrets.DB_DATABASE }}\nDB_USERNAME=${{ secrets.DB_USERNAME }}\nDB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $ENV_PATH
          else
            echo ".env file already exists. Updating database configuration."
            sed -i "s/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/" $ENV_PATH
            sed -i "s/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" $ENV_PATH
            sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/" $ENV_PATH
            sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" $ENV_PATH
          fi
          echo ".env file setup and database configuration completed."

      - name: Generate Laravel app key
        run: |
          cd /var/www/html/wwwroot
          php artisan key:generate
          echo "Application key generated."

      - name: Run database migrations
        run: |
          cd /var/www/html/wwwroot
          php artisan migrate --force
          echo "Database migrations completed."
